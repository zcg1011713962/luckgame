local skynet = require "skynet"
require "skynet.manager"
local httpc = require "http.httpc"
local cjson = require "cjson"
local snax = require "snax"
local cluster = require "cluster"
local CMD = {}
local webclient
---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by raftc.
--- DateTime: 2018/7/13 下午1:53
--- 微信接口封装


--[[
通过code获取access_token的接口
e.g:
{
    "access_token":"ACCESS_TOKEN", --接口调用凭证
    "expires_in":7200, --access_token接口调用凭证超时时间，单位（秒）
    "refresh_token":"REFRESH_TOKEN", --	用户刷新access_token
    "openid":"OPENID", --授权用户唯一标识
    "scope":"SCOPE" --用户授权的作用域，使用逗号（,）分隔
}
]]
function CMD.getAccessToken(code)
    assert(code)
    if #code==0 then
        assert("wechat get acccess_toekn auth failed because the code length equre zero!")
    end

    local appid = ""
    local apptoken = ""

    --获取微信配置信息
    local sql = string.format("select * from s_config_third where type='wechat' limit 1")
    local rs = skynet.call(".mysqlpool", "lua", "execute", sql)
    if #rs == 1 then
        appid = rs[1].appid
        apptoken = rs[1].appsecret
    end

    if #appid == 0 then
        assert("not set wechat config information")
    end

    if nil == webclient then
        webclient = skynet.newservice("webreq")
    end

    --获取微信配置信息
    --local url = string.format("https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&secret=%s&code=%s&grant_type=authorization_code", appid, apptoken, code)
    local url = "https://api.weixin.qq.com/sns/oauth2/access_token";
    local ok, body = skynet.call(webclient, "lua", "request", url,{appid=appid,secret=apptoken, grant_type="authorization_code",code=code}, nil,false)
    if not ok then
        assert("Verify token from wechat error!")
    end
    local resp = cjson.decode(body)
    print("resp:", resp)

    if resp ~= nil then
        assert(string.format("verify wechat error %s:", code))
    end

    if resp.errcode ~= nil then
        return PDEFINE.RET.ERROR.WECHAT_AUTH_FAILD
    end

    return PDEFINE.RET.SUCCESS, resp.access_token, resp.openid
end

--[[
获取用户个人信息（UnionID机制）
最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空
e.g:
{
    "openid":"OPENID", --普通用户的标识，对当前开发者帐号唯一
    "nickname":"NICKNAME", --普通用户昵称
    "sex":1, --普通用户性别，1为男性，2为女性
    "province":"PROVINCE", --普通用户个人资料填写的省份
    "city":"CITY", --普通用户个人资料填写的城市
    "country":"COUNTRY", --国家，如中国为CN
    "headimgurl": "http://wx.qlogo.cn/mmopen/g3MonUZtNHkdmzicIlibx6iaFqAc56vxLSUfpb6n5WKSYVY0ChQKkiaJSgQ1dZuTOgvLLrhJbERQQ4eMsv84eavHiaiceqxibJxCfHe/0", --用户头像
    "privilege":[  --用户特权信息，json数组
        "PRIVILEGE1",
        "PRIVILEGE2"
    ],
    "unionid": " o6_bmasdasdsad6_2sgVt7hMZOPfL" --用户统一标识。针对一个微信开放平台帐号下的应用，同一用户的unionid是唯一的。
}
]]
function CMD.getUserInfo(access_token, openid)

    if nil == webclient then
        webclient = skynet.newservice("webreq")
    end

    local url = "https://api.weixin.qq.com/sns/userinfo";
    local ok, body = skynet.call(webclient, "lua", "request", url,{access_token=access_token,openid=openid}, nil,false)
    if not ok then
        assert("get userinfo from wechat error!")
    end
    local resp = cjson.decode(body)
    print("resp:", resp)

    if resp ~= nil then
        assert(string.format("get wechat userinfo error %s:%s", access_token, openid))
    end

    if resp.errcode ~= nil then
        return 500
    end

    return PDEFINE.RET.SUCCESS, resp
end


skynet.start(function()
    skynet.dispatch("lua", function(session, address, cmd, ...)
        local f = CMD[cmd]
        skynet.retpack(f(...))
    end)
    skynet.register(".wechat")
end)